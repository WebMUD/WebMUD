---
import {
    MoveCommand,
    Direction,
    Item,
    HelpCommand,
    CommandName,
    ExitCommand,
    InventoryCommand,
    SayCommand,
    WhisperCommand,
    LookCommand,
    TakeCommand,
    DropCommand,
    } from './commands';
---

start := commands

commands := moveCommand | helpCommand | exitCommand | inventoryCommand | sayCommand | whisperCommand | 
lookCommand | takeCommand | dropCommand |shortenedMoveCommand

space := ' '



dropCommand := dropKeyword=dropKeyword space text=word .command =  DropCommand {return new DropCommand(text);}
dropKeyword := 'drop'


takeCommand := takeKeyword=takeKeyword space text=word .command =  TakeCommand {return new TakeCommand(text);}
takeKeyword := 'take'

lookCommand :=   lookKeyword=lookKeyword space text=word .command =  LookCommand {return new LookCommand(text);} |
                    lookKeyword=lookKeyword .command = LookCommand {return new LookCommand("");}
   
lookKeyword := 'look'

whisperCommand := whisperKeyword=whisperKeyword space username = oneWord space text=word .command =  WhisperCommand {return new WhisperCommand(text, username);}
whisperKeyword := 'whisper' | 'w'

word:='.+'
oneWord:='\S+'
sayCommand := sayKeyword=sayKeyword space text=word .command = SayCommand {return new SayCommand(text);}
sayKeyword := 'say' | 's'

inventoryCommand := inventoryKeyword=inventoryKeyword .command = InventoryCommand {return new InventoryCommand();}
inventoryKeyword := 'inventory' | 'i'

exitCommand := exitKeyword=exitKeyword .command = ExitCommand {return new ExitCommand();}
exitKeyword := 'exit' | 'exits' 

//helpCommand grammar
helpKeyword := 'help' | 'h'

helpCommand := helpKeyword space commandName=commandName
    .command = HelpCommand {return new HelpCommand(this.commandName.value);} |
    helpKeyword commandName=commandName
    .command = HelpCommand {return new HelpCommand(this.commandName.value);}

commandName := move | exit | take | drop | say | inventory | whisper | help

//name of commands for the help command
move := text='move' .value = CommandName {return CommandName.MOVE;} | 
    text='m' .value = CommandName {return CommandName.MOVE;}
exit := text='exit' .value = CommandName {return CommandName.EXIT;} | 
    text='exits' .value = CommandName {return CommandName.EXIT;} |
    text='e' .value = CommandName {return CommandName.EXIT;}
take := text='take' .value = CommandName {return CommandName.TAKE;} | 
    text='t' .value = CommandName {return CommandName.TAKE;}
drop := text='drop' .value = CommandName {return CommandName.DROP;} | 
    text='d' .value = CommandName {return CommandName.DROP;}
say := text='say' .value = CommandName {return CommandName.SAY;} | 
    text='s' .value = CommandName {return CommandName.SAY;}
inventory := text='inventory' .value = CommandName {return CommandName.INVENTORY;} | 
    text='i' .value = CommandName {return CommandName.INVENTORY;}
whisper := text='whisper' .value = CommandName {return CommandName.WHISPER;} | 
    text='w' .value = CommandName {return CommandName.WHISPER;}
look := text='look' .value = CommandName {return CommandName.LOOK;}  
help := text='' .value = CommandName {return CommandName.HELP;}
   


item :=
   text='test' .value = Item {return Item.ITEM_TEST;}

moveCommand := 
    moveKeyword space text=word
    .command = MoveCommand {return new MoveCommand(text);}

shortenedMoveCommand := directions=directions .command = MoveCommand {return new MoveCommand(directions);}

directions := northKeyword | southKeyword | westKeyword | eastKeyword |  upKeyword |downKeyword

northKeyword := 'north' | 'n'
southKeyword := 'south' | 's'
westKeyword := 'west' | 'w'
eastKeyword := 'east' | 'e'
upKeyword := 'up' | 'u'
downKeyword := 'down' | 'd'

moveKeyword := 'move' | 'm'